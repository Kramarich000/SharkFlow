import {
  FaBold,
  FaItalic,
  FaStrikethrough,
  FaListUl,
  FaListOl,
  FaCode,
  FaLink,
  FaUnlink,
  FaTasks,
  FaHighlighter,
  FaTable,
} from 'react-icons/fa';
import { RiArrowGoBackLine, RiArrowGoForwardLine } from 'react-icons/ri';

export const getMenuBarConfig = (editor, setLink) => [
  // Block 1: Basic text formatting
  {
    type: 'button',
    id: 'bold',
    onClick: () => editor.chain().focus().toggleBold().run(),
    disabled: !editor.can().chain().focus().toggleBold().run(),
    isActive: editor.isActive('bold'),
    title: 'Bold',
    Icon: FaBold,
  },
  {
    type: 'button',
    id: 'italic',
    onClick: () => editor.chain().focus().toggleItalic().run(),
    disabled: !editor.can().chain().focus().toggleItalic().run(),
    isActive: editor.isActive('italic'),
    title: 'Italic',
    Icon: FaItalic,
  },
  {
    type: 'button',
    id: 'strike',
    onClick: () => editor.chain().focus().toggleStrike().run(),
    disabled: !editor.can().chain().focus().toggleStrike().run(),
    isActive: editor.isActive('strike'),
    title: 'Strikethrough',
    Icon: FaStrikethrough,
  },
  // Block 2: Lists
  {
    type: 'button',
    id: 'bulletList',
    onClick: () => editor.chain().focus().toggleBulletList().run(),
    isActive: editor.isActive('bulletList'),
    title: 'Bullet List',
    Icon: FaListUl,
  },
  {
    type: 'button',
    id: 'orderedList',
    onClick: () => editor.chain().focus().toggleOrderedList().run(),
    isActive: editor.isActive('orderedList'),
    title: 'Ordered List',
    Icon: FaListOl,
  },
  {
    type: 'button',
    id: 'taskList',
    onClick: () => editor.chain().focus().toggleTaskList().run(),
    isActive: editor.isActive('taskList'),
    title: 'Task List',
    Icon: FaTasks,
  },
  // Block 3: Code and Links
  {
    type: 'button',
    id: 'codeBlock',
    onClick: () => editor.chain().focus().toggleCodeBlock().run(),
    isActive: editor.isActive('codeBlock'),
    title: 'Code Block',
    Icon: FaCode,
  },
  {
    type: 'button',
    id: 'link',
    onClick: setLink,
    isActive: editor.isActive('link'),
    title: 'Add/Edit Link',
    Icon: FaLink,
  },
  {
    type: 'button',
    id: 'unlink',
    onClick: () => editor.chain().focus().unsetLink().run(),
    disabled: !editor.isActive('link'),
    title: 'Remove Link',
    Icon: FaUnlink,
  },
  // Block 4: Highlighting and Colors
  {
    type: 'button',
    id: 'highlight',
    onClick: () => editor.chain().focus().toggleHighlight().run(),
    isActive: editor.isActive('highlight'),
    title: 'Highlight',
    Icon: FaHighlighter,
  },
  {
    type: 'color-picker',
    id: 'color',
    onInput: (event) => editor.chain().focus().setColor(event.target.value).run(),
    value: editor.getAttributes('textStyle').color || '#000000',
    title: 'Text Color',
  },
  // Block 5: Tables
  {
    type: 'button',
    id: 'insertTable',
    onClick: () => editor.chain().focus().insertTable({ rows: 3, cols: 3, withHeaderRow: true }).run(),
    title: 'Insert Table',
    Icon: FaTable,
  },
  {
    type: 'button',
    id: 'addColumnBefore',
    onClick: () => editor.chain().focus().addColumnBefore().run(),
    disabled: !editor.can().addColumnBefore(),
    title: 'Add Column Before',
    Content: 'C-',
  },
  {
    type: 'button',
    id: 'addColumnAfter',
    onClick: () => editor.chain().focus().addColumnAfter().run(),
    disabled: !editor.can().addColumnAfter(),
    title: 'Add Column After',
    Content: 'C+',
  },
  {
    type: 'button',
    id: 'deleteColumn',
    onClick: () => editor.chain().focus().deleteColumn().run(),
    disabled: !editor.can().deleteColumn(),
    title: 'Delete Column',
    Content: 'DC',
  },
  {
    type: 'button',
    id: 'addRowBefore',
    onClick: () => editor.chain().focus().addRowBefore().run(),
    disabled: !editor.can().addRowBefore(),
    title: 'Add Row Before',
    Content: 'R-',
  },
  {
    type: 'button',
    id: 'addRowAfter',
    onClick: () => editor.chain().focus().addRowAfter().run(),
    disabled: !editor.can().addRowAfter(),
    title: 'Add Row After',
    Content: 'R+',
  },
  {
    type: 'button',
    id: 'deleteRow',
    onClick: () => editor.chain().focus().deleteRow().run(),
    disabled: !editor.can().deleteRow(),
    title: 'Delete Row',
    Content: 'DR',
  },
  {
    type: 'button',
    id: 'deleteTable',
    onClick: () => editor.chain().focus().deleteTable().run(),
    disabled: !editor.can().deleteTable(),
    title: 'Delete Table',
    Content: 'DT',
  },
  // Block 6: History
  {
    type: 'button',
    id: 'undo',
    onClick: () => editor.chain().focus().undo().run(),
    disabled: !editor.can().chain().focus().undo().run(),
    title: 'Undo',
    Icon: RiArrowGoBackLine,
  },
  {
    type: 'button',
    id: 'redo',
    onClick: () => editor.chain().focus().redo().run(),
    disabled: !editor.can().chain().focus().redo().run(),
    title: 'Redo',
    Icon: RiArrowGoForwardLine,
  },
]; 